---

# default config => is overwritten by provided config
default_django:
  # will overwrite the apache config as seen in the main defaults file of ansibleguy.infra_apache (see: https://github.com/ansibleguy/infra_apache)
  sites: {}

  user: 'www-data'
  group: 'www-data'

  databases: ['mysql']  # types of databases the role should prepare to support

  python_modules:
    base: ['django', 'pyinotify']
    mysql: ['django_mysql', 'mysqlclient']
    pgsql: ['psycopg2']

  packages:
    base: ['python3', 'python3-virtualenv', 'python3-pip', 'libapache2-mod-wsgi-py3', 'rsync']
    mysql: ['default-libmysqlclient-dev']

  apache_modules:
    present: ['wsgi', 'ssl', 'headers', 'rewrite', 'http2']
    absent: ['autoindex']

  settings: {}
  config: {}
  headers: {}
  # you might need to disable/change some security headers (p.e. Content-Security-Policy) depending on your application!
  # for more info see: https://github.com/ansibleguy/infra_apache
  ssl: {}  # see: https://github.com/ansibleguy/infra_certs
  modules: {}  # apache modules

  security:
    restricted_methods: ['GET', 'POST', 'HEAD']  # you might need to extend/disable this filter depending on your application!

  letsencrypt:
    email:

DJANGO_CONFIG: "{{ default_django | combine(django, recursive=true) }}"

# site-specific config
default_site_config:
  mode: 'serve'  # DO NOT CHANGE!
  app_include: true  # DO NOT CHANGE!
  state: 'present'
  admin: 'django@template.ansibleguy.net'
  port_plain: 80
  port_ssl: 443
  domain:
  aliases: []
  ip:

  serve:  # used to pass to ansibleguy.infra_apache
    path: '/var/www/django'  # path used for static files

  static_url: 'public'  # sub-url that is used for static files (as configured in django's settings.py)
  collectstatic: false  # 'STATIC_ROOT' django-setting must be defined!
  path_venv: '/var/lib/django_venv'  # path to the python virtual environment
  path_code: '/var/lib/django'  # where the code will be placed
  project: 'base'  # directory used to store the default-settings (used to store 'settings.py'; normally it equals the project name)

  database:
    type: 'mariadb'
    manage: true  # if the database should be managed by the ansibleguy.infra_mariadb role; only if type in ['mysql', 'mariadb']
    host: 'localhost'
    db: 'django'
    user: 'django'
    # pwd: "{{ lookup('password', '/dev/null chars=ascii_letters,digits length=20') }}"
    charset: 'utf8mb4'
    socket:
    config: 'db.cnf'  # file will be placed in the django root path
    config_mode: '0400'
    backup: false  # dis-/enable backup service
    update_pwd: 'on_create'  # can be set to 'always' to generate a new random mysql-password
    settings:
      wait_timeout: 3600  # for django's persistent sql connection

  sync_code:
    enabled: false
    src:  # local source of the code to sync
    dst:  # if empty => it will be synced to 'path_code'
    static_src:  # local source of static files
    static_dst:  # if empty => it will be synced to 'serve.path'
    options: ['--exclude=*.cnf', '--exclude=migrations/*', '--exclude=__pycache__/']

  python_version: '3.9'  # python version must be pre-installed on the target system
  python_modules:
    present: []
    absent: []
  env_pythonpath: []  # paths to add to 'PYTHONPATH'

  config: {}  # site-specific setting-value pairs
  config_additions: []  # lines that will 1-to-1 be appended to the site-config
  headers: {}
  security: {}

  ssl:  # see: https://github.com/ansibleguy/infra_certs
    mode: 'selfsigned'  # existing/selfsigned/ca/letsencrypt
    # existing:
    #   We expect the certs to be placed in the role's 'files' directory named like the site
    #   Example: files/certs/ansibleguy.key and files/certs/ansibleguy.crt
    # letsencrypt:
    #   Host needs to have a valid public dns record pointed at it
    #   Needs to be publicly reachable over port 80/tcp
    cert:
      name:
      cn: 'Django Certificate'
      org: 'AnsibleGuy'
      ou:
      country:
      state:
      locality:
      email:
      crl_distribution: []
    ca:
      file:  # can be used if you want to use an existing ca
      cn:
      org:
      ou:
      country:
      state:
      locality:
      email:
      pwd:  # it's highly recommended setting a passphrase!

  migration_pre_tasks: []
  migration_post_tasks: []

  letsencrypt:
    email:

apache_sites: {}
mariadb_instances: {}
force_removal: false
random_pwd_length: '50'  # must be string-type
tmp_pwd_file_prefix: '/tmp/.ansibleguy.infra_django_apache_'
